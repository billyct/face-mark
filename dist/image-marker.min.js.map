{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 797719742e426864f88d","webpack:///./src/index.js"],"names":["ImageMarker","imageUrl","Error","options","top","left","width","height","text","fontSize","fontFamily","backgroundColor","prototype","recreateOptionsWithImage","image","undefined","mark","callback","Object","assign","initImage","img","initCanvas","initUsedTextSize","pixelGrid","initPixelsGrid","canvas","context","clearRect","fillStyle","fillRect","i","length","px","r","g","b","a","font","fillText","getNextUsedChar","x","y","ele","toDataURL","str","result","substring","usedText","currentIndex","canvasElement","document","createElement","canvasContext","getContext","drawImage","source","getImageData","data","block","innerHTML","style","body","appendChild","offsetWidth","Math","floor","offsetHeight","removeChild","sourceData","pixelsGrid","stepX","stepY","countStepsX","countStepsY","resultX","resultY","push","Image","src","onload","global","module","exports"],"mappings":"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","file":"image-marker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"image-marker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"image-marker\"] = factory();\n\telse\n\t\troot[\"image-marker\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 797719742e426864f88d\n **/","/**\n * 给图片用文字的形式打码\n * @example:\n *  let imageMarker = new ImageMarker('path/to/image');\n *  imageMarker.mark({\n *    text: '这是一个文字马赛克'\n *  }, callback(data) {\n *    //这里的data是Data URIs\n *    //参考 https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n *  });\n */\n\n /* eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }] */\n\nfunction ImageMarker(imageUrl) {\n\tif (!imageUrl) {\n\t\tthrow new Error('the constructor needs image_url');\n\t}\n\tthis.options = {\n\t\timageUrl: imageUrl,\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t\ttext: 'mark',\n\t\tfontSize: 14,\n\t\tfontFamily: 'Monospace', // 最好是等长的文字,因为文字是按照等长来计算的\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0)'\n\t};\n}\n\nImageMarker.prototype.recreateOptionsWithImage = function (options, image) {\n\t// 如果高和宽没有设定的话,就设定为整张图片的大小\n\tif (options.width === undefined) {\n\t\tthis.options.width = image.width;\n\t}\n\n\tif (options.height === undefined) {\n\t\tthis.options.height = image.height;\n\t}\n};\n\nImageMarker.prototype.mark = function (options, callback) {\n\toptions = options || {};\n\tthis.options = Object.assign(this.options, options);\n\n\tthis.initImage(img => {\n\t\tthis.recreateOptionsWithImage(options, img);\n\t\t// 通过canvas假装把image加载进来\n\t\tthis.initCanvas(img);\n\t\t// 把每个字应该在图片里所占的宽高算出来\n\t\tthis.initUsedTextSize();\n\t\t// 获取一堆rgba\n\t\tconst pixelGrid = this.initPixelsGrid();\n\t\t// 再根据mark rect把那部分清空\n\t\tthis.canvas.context.clearRect(this.options.left, this.options.top, this.options.width, this.options.height);\n\t\tthis.canvas.context.fillStyle = this.options.backgroundColor;\n\t\tthis.canvas.context.fillRect(this.options.left, this.options.top, this.options.width, this.options.height);\n\t\t// 把一堆rgba用字写进去\n\t\tfor (var i = 0; i < pixelGrid.length; i++) {\n\t\t\tlet px = pixelGrid[i];\n\t\t\t// 一个字一个颜色嘛\n\t\t\tthis.canvas.context.fillStyle = 'rgba(' + px.r + ', ' + px.g + ', ' + px.b + ', ' + px.a + ')';\n\t\t\tthis.canvas.context.font = this.options.fontSize + 'px ' + this.options.fontFamily;\n\t\t\tthis.canvas.context.fillText(this.getNextUsedChar(), px.x, px.y);\n\t\t}\n\t\tcallback && callback(this.canvas.ele.toDataURL());\n\t});\n};\n\nImageMarker.prototype.getNextUsedChar = function () {\n\tconst str = this.options.text;\n\tlet result = str.substring(this.usedText.currentIndex, this.usedText.currentIndex + 1);\n\tthis.usedText.currentIndex++;\n\tif (this.usedText.currentIndex === str.length) {\n\t\tthis.usedText.currentIndex = 0;\n\t}\n\treturn result;\n};\n\n/**\n * 初始化一个是image的canvas\n * @param image\n */\nImageMarker.prototype.initCanvas = function (image) {\n\t// 先创建一个canvas，把图片放到里面\n\tconst canvasElement = document.createElement('canvas');\n\tcanvasElement.width = image.width;\n\tcanvasElement.height = image.height;\n\tconst canvasContext = canvasElement.getContext('2d');\n\tcanvasContext.drawImage(this.image, 0, 0);\n\t// 主要是把canvas的数据记录到对象里面\n\tthis.canvas = {\n\t\tele: canvasElement,\n\t\tcontext: canvasContext,\n\t\twidth: canvasElement.width,\n\t\theight: canvasElement.height,\n\t\tsource: canvasContext.getImageData(0, 0, canvasElement.width, canvasElement.height).data\n\t};\n};\n\n/**\n * 计算文字的长和宽\n */\nImageMarker.prototype.initUsedTextSize = function () {\n\tlet block = document.createElement('span');\n\tblock.innerHTML = this.options.text[0];\n\tblock.style.fontSize = this.options.fontSize + 'px';\n\tblock.style.fontFamily = this.options.fontFamily;\n\tdocument.body.appendChild(block);\n\t// 这里必须先插入到html,再把它从html中移除\n\tthis.usedText = {\n\t\twidth: block.offsetWidth,\n\t\theight: Math.floor(block.offsetHeight - (block.offsetHeight * 0.2)),\n\t\tcurrentIndex: 0\n\t};\n\tdocument.body.removeChild(block);\n};\n\n/**\n * Return list of color areas, which will contain used symbols.\n * Every element has next data:\n * <code>\n * [\n *  'r': <red chanel>,\n *  'g': <green chanel>,\n *  'b': <blue chanel>,\n *  'a': <alfa chanel>,\n *  'x': <x-position on result image>,\n *  'y': '<y-position on result image>\n *  ]\n *  </code>\n *\n *  @return array\n */\nImageMarker.prototype.initPixelsGrid = function () {\n\tconst sourceData = this.canvas.source;\n\tlet pixelsGrid = [];\n\tfor (let i = 0; i < sourceData.length; i += 4) {\n\t\tlet y = Math.floor(i / (this.canvas.width * 4));\n\t\tlet x = (i - (y * this.canvas.width * 4)) / 4;\n\t\tif (typeof pixelsGrid[x] === 'undefined') {\n\t\t\tpixelsGrid[x] = [];\n\t\t}\n\t\tpixelsGrid[x][y] = {\n\t\t\tr: sourceData[i],\n\t\t\tg: sourceData[i + 1],\n\t\t\tb: sourceData[i + 2],\n\t\t\ta: sourceData[i + 3]\n\t\t};\n\t}\n\n\t// 将文字的宽和高当做x和y的步长\n\tconst stepX = this.usedText.width;\n\tconst stepY = this.usedText.height;\n\t// 算出x和y上的文字总数\n\tconst countStepsX = this.options.width / stepX;\n\tconst countStepsY = this.options.height / stepY;\n\tlet result = [];\n\n\tfor (let y = 0; y < countStepsY; y++) {\n\t\tfor (let x = 0; x < countStepsX; x++) {\n\t\t\tlet resultX = this.options.left + (x * stepX);\n\t\t\tlet resultY = this.options.top + (y * stepY);\n\t\t\tresult.push({\n\t\t\t\tx: resultX,\n\t\t\t\ty: resultY,\n\t\t\t\tr: pixelsGrid[resultX][resultY].r,\n\t\t\t\tg: pixelsGrid[resultX][resultY].g,\n\t\t\t\tb: pixelsGrid[resultX][resultY].b,\n\t\t\t\ta: pixelsGrid[resultX][resultY].a\n\t\t\t});\n\t\t}\n\t}\n\treturn result;\n};\n\nImageMarker.prototype.initImage = function (callback) {\n\tthis.image = new Image();\n\tthis.image.src = this.options.imageUrl;\n\tthis.image.onload = function () {\n\t\tcallback && callback(this);\n\t};\n};\n\nglobal.ImageMarker = ImageMarker;\nmodule.exports = ImageMarker;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}